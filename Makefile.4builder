GOENV=GOPATH=$(CURDIR)
GOCMD=go
GOBUILD=$(GOCMD) install
GOCLEAN=$(GOCMD) clean
GOTEST=$(GOCMD) test
GOMOD=$(GOCMD) mod
WORKPATH=/go/src

BUILD_FLGS= -tags netgo -installsuffix netgo -ldflags='-extldflags="static"'
LINUX_OPT= GOOS=linux GOARCH=amd64
LINUX_UNAME=Linux_x86_64
MAC_OPT= GOOS=darwin GOARCH=arm64
MAC_UNAME=Darwin_aarch64

SRCS := $(shell find . -name '*.go' -type f)
BINS := $(shell test -d ./bin && find ./bin/ -type f)

all: test build ## test & build

build: $(SRCS) ## build to linux binary
	cd $(WORKPATH); $(LINUX_OPT) $(GOBUILD) $(BUILD_FLGS) ./cmd/onamaeddns/onamaeddns.go
	cd $(WORKPATH); mkdir -p /go/src/bin/onamaeddns-$(LINUX_UNAME)/
	cd $(WORKPATH); mv /go/src/bin/onamaeddns /go/src/bin/onamaeddns-$(LINUX_UNAME)/
	cd $(WORKPATH); $(MAC_OPT) $(GOBUILD) $(BUILD_FLGS) ./cmd/onamaeddns/onamaeddns.go
	cd $(WORKPATH); mkdir -p /go/src/bin/onamaeddns-$(MAC_UNAME)/
	cd $(WORKPATH); mv /go/src/bin/onamaeddns /go/src/bin/onamaeddns-$(MAC_UNAME)/

.PHONY: test
test: ## run test
	cd $(WORKPATH); $(GOTEST) -count=1 ./onamaeddns_test.go

.PHONY: clean
clean: $(BINS) ## cleanup
	cd $(WORKPATH); $(GOCLEAN)
	cd $(WORKPATH); rm -f $(BINS)

mod: ## mod ensure
	cd $(WORKPATH); $(GOMOD) tidy
	cd $(WORKPATH); $(GOMOD) vendor
modinit: ## mod init
	cd $(WORKPATH); $(GOMOD) init

.PHONY: help
	all: help
help: ## help
	@awk -F ':|##' '/^[^\t].+?:.*?##/ {\
		printf "\033[36m%-30s\033[0m %s\n", $$1, $$NF \
	}' $(MAKEFILE_LIST)
